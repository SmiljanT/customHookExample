{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Kurs React\\\\React Udemy\\\\formsAndInput\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: blurChangeHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const enteredEmailBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredName) {\n      return;\n    }\n\n    resetNameInput();\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: blurChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: enteredEmailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty, and must include @\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"7VIEy847M/KBJErjuc9q4ueH+dI=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","blurChangeHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","emailInputChangeHandler","event","target","enteredEmailBlurHandler","formSubmissionHandler","preventDefault","setEnteredNameTouched","nameInputClasses","emailInputClasses"],"sources":["C:/Users/User/Desktop/Kurs React/React Udemy/formsAndInput/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: blurChangeHandler, \n    reset: resetNameInput,\n  } = useInput(value => value.trim() !== '');\n\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  \n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const enteredEmailBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  }\n\n\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n  \n\n    if (!enteredName) {\n      return;\n    }\n\n    resetNameInput();\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control'\n    \n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={blurChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError  && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={enteredEmailBlurHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsInvalid && (\n          <p className=\"error-text\">Email must not be empty, and must include @</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n      <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}